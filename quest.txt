Q1 背景： 我们的平台是一个面向全球H5游戏用户的在线平台，每日产生大量用户行为数据（如游戏时长、
任务完成、消费等）。这些数据通过数据管线实时流入大数据平台 Databricks，支持用户分群分析。
基于用户分群信息，我们可以为不同用户群体设计个性化的游戏活动，例如针对长期未氪金用户投 放特定礼包。

一、项目概述 我们计划设计并开发一套全新的Segmentation管理系统，以满足多样化、大规模的数据管理 需求。这套系统主要包括存储系统和计算系统两个部分。
此次项目，我们的主要职责是开发计算系统，无需涉及业务逻辑部分。

二、开发内容 开发内容将包括离线计算和实时计算两个子系统： 
- 离线计算：用于处理长周期更新的任务，例如预测可能会脱离平台的用户。 
- 实时计算：用于处理需实时更新的Segment，例如用户的支付金额等。 
另外，数据结构也需要自行设计和开发。 我们的目标是构建这两部分的基础功能，并且保证系统的扩展性，能同时管理上百个Segment ，并处理千万级的用户数据。 

三、开发规范 我们将坚持遵循一系列开发规范来保证项目的质量和进度。 
1. Github代码管理 
- 仓库结构：每个项目都应具有清晰的仓库结构，包括但不限于文档、源代码、测试和构 建脚本等。 
- 分支管理：设置不同的开发分支，确保每次提交都有明确的目的和效果。 
2. 代码管理 
- 选择Java、Scala、Python、Go等语言进行开发，并且确保代码的可维护性： 
- 可维护性：设计通用的接口，编写清晰的注释，并采取合理的函数/变量命名规范。 
3. 中间件选择 - 选择可以在本地完全搭建开发环境的中间件，以保证项目的独立性。 

四、最终产出期待
1. 可执行最小限度的程序代码 
2. 可以自动化本地部署的脚本 
3. 可以按步骤由他人执行的runbook，记录基本使用的case